print(2.0)
print(type(2.0))             # проверки кода в конце и различие float для дробных чисел
print(2.0+2)
print()
print('hello  world')        # проверки кода в конце и различие просто текст
print(type('helo world'))    # проверки кода в конце и различие str для текста
print(type(123))             # проверки кода в конце и различие int для чисел
print('1'+'1')               # цифры в кавычках по отдельности цифры не складываются, а соединяются ответ 11
print('hello'+'world')       # слова в кавычках по отдельности пишутся не по отдельности, а слитно одним словом
print(type('1'+'1'))         # чисто для себя попробовал что будет если написать так
print(type('hello'+'world')) # получается str почему? Как я понял из разъяснений слова не пишутся слитно и это тип данных
print(True, False)
print(type(True),type(False))# тип данных получаем результат bool
print(7>10)
print(7>10, 7<10)
print(7>10),print(7<10)      # сам так написал и получилось, при написании в одной строке 2 раза print ответ пишется все-равно на следующей строчке
print(7==7)                  # знак = пишем 2 раза обязательно иначе не будет работать (равенство)
print(7!=7)                  # а так пишем (не равенство -=)
print(7!=7 and 7<10)         # для команды and, чтобы получить «Истина-True», оба выражения должны быть истинными
print(7==7 and 7<10)
print(7!=7 or 7<10)          # А для команды or достаточно, чтобы «Истина-True» было хотя бы одно из них. Таких выражений в строке может быть неограниченное количество, можно также использовать несколько команд and, а затем, например, команду or.

print('8')
print(int('8'))
print(type('8'))             # Изменение типа данных
print(type(int('8')))        # Изменение типа данных






